*---------------------------------------------------------------------*
*    view related FORM routines
*   generation date: 05.12.2021 at 18:53:17
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*
*...processing: ZSFE_V_CARD.....................................*
FORM GET_DATA_ZSFE_V_CARD.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZSFE_D_CARD WHERE
(VIM_WHERETAB) .
    CLEAR ZSFE_V_CARD .
ZSFE_V_CARD-MANDT =
ZSFE_D_CARD-MANDT .
ZSFE_V_CARD-CARD_ID =
ZSFE_D_CARD-CARD_ID .
ZSFE_V_CARD-CARD_TYPE_ID =
ZSFE_D_CARD-CARD_TYPE_ID .
ZSFE_V_CARD-OWNER_PHONE =
ZSFE_D_CARD-OWNER_PHONE .
    SELECT SINGLE * FROM ZSFE_D_CARD_T WHERE
CARD_ID = ZSFE_D_CARD-CARD_ID AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZSFE_V_CARD-OWNER_FIRST_NAME =
ZSFE_D_CARD_T-OWNER_FIRST_NAME .
ZSFE_V_CARD-OWNER_LAST_NAME =
ZSFE_D_CARD_T-OWNER_LAST_NAME .
    ENDIF.
<VIM_TOTAL_STRUC> = ZSFE_V_CARD.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZSFE_V_CARD .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZSFE_V_CARD.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZSFE_V_CARD-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZSFE_D_CARD WHERE
  CARD_ID = ZSFE_V_CARD-CARD_ID .
    IF SY-SUBRC = 0.
    DELETE ZSFE_D_CARD .
    ENDIF.
    DELETE FROM ZSFE_D_CARD_T WHERE
    CARD_ID = ZSFE_D_CARD-CARD_ID .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZSFE_D_CARD WHERE
  CARD_ID = ZSFE_V_CARD-CARD_ID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZSFE_D_CARD.
    ENDIF.
ZSFE_D_CARD-MANDT =
ZSFE_V_CARD-MANDT .
ZSFE_D_CARD-CARD_ID =
ZSFE_V_CARD-CARD_ID .
ZSFE_D_CARD-CARD_TYPE_ID =
ZSFE_V_CARD-CARD_TYPE_ID .
ZSFE_D_CARD-OWNER_PHONE =
ZSFE_V_CARD-OWNER_PHONE .
    IF SY-SUBRC = 0.
    UPDATE ZSFE_D_CARD .
    ELSE.
    INSERT ZSFE_D_CARD .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZSFE_D_CARD_T WHERE
    CARD_ID = ZSFE_D_CARD-CARD_ID AND
    LANGU = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZSFE_D_CARD_T.
ZSFE_D_CARD_T-CARD_ID =
ZSFE_D_CARD-CARD_ID .
ZSFE_D_CARD_T-LANGU =
SY-LANGU .
      ENDIF.
ZSFE_D_CARD_T-OWNER_FIRST_NAME =
ZSFE_V_CARD-OWNER_FIRST_NAME .
ZSFE_D_CARD_T-OWNER_LAST_NAME =
ZSFE_V_CARD-OWNER_LAST_NAME .
    IF SY-SUBRC = 0.
    UPDATE ZSFE_D_CARD_T .
    ELSE.
    INSERT ZSFE_D_CARD_T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZSFE_V_CARD-UPD_FLAG,
STATUS_ZSFE_V_CARD-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZSFE_V_CARD.
  SELECT SINGLE * FROM ZSFE_D_CARD WHERE
CARD_ID = ZSFE_V_CARD-CARD_ID .
ZSFE_V_CARD-MANDT =
ZSFE_D_CARD-MANDT .
ZSFE_V_CARD-CARD_ID =
ZSFE_D_CARD-CARD_ID .
ZSFE_V_CARD-CARD_TYPE_ID =
ZSFE_D_CARD-CARD_TYPE_ID .
ZSFE_V_CARD-OWNER_PHONE =
ZSFE_D_CARD-OWNER_PHONE .
    SELECT SINGLE * FROM ZSFE_D_CARD_T WHERE
CARD_ID = ZSFE_D_CARD-CARD_ID AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZSFE_V_CARD-OWNER_FIRST_NAME =
ZSFE_D_CARD_T-OWNER_FIRST_NAME .
ZSFE_V_CARD-OWNER_LAST_NAME =
ZSFE_D_CARD_T-OWNER_LAST_NAME .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZSFE_V_CARD-OWNER_FIRST_NAME .
      CLEAR ZSFE_V_CARD-OWNER_LAST_NAME .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZSFE_V_CARD USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZSFE_V_CARD-CARD_ID TO
ZSFE_D_CARD-CARD_ID .
MOVE ZSFE_V_CARD-MANDT TO
ZSFE_D_CARD-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZSFE_D_CARD'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZSFE_D_CARD TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZSFE_D_CARD'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZSFE_D_CARD-CARD_ID TO
ZSFE_D_CARD_T-CARD_ID .
MOVE SY-LANGU TO
ZSFE_D_CARD_T-LANGU .
MOVE ZSFE_V_CARD-MANDT TO
ZSFE_D_CARD_T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZSFE_D_CARD_T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZSFE_D_CARD_T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZSFE_D_CARD_T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*

* base table related FORM-routines.............
INCLUDE LSVIMFTX .
